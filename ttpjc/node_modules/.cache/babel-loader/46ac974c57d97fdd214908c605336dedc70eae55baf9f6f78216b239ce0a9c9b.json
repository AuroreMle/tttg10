{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: \"AdminDashboard\",\n  data() {\n    return {\n      code: '',\n      // Code saisi par l'administrateur\n      lastValidatedCode: null,\n      // Dernier code validé (informations à afficher)\n      alertMessage: '',\n      // Message d'alerte pour la validation\n      alertClass: '' // Classe CSS pour l'alerte (success ou error)\n    };\n  },\n  methods: {\n    async validateCode() {\n      try {\n        // Envoyer le code saisi pour validation\n        const response = await axios.post('http://localhost:3000/validate-code', {\n          code: this.code\n        });\n        if (response.status === 200 && response.data.message === 'Code valide !') {\n          this.alertMessage = 'Code valide !';\n          this.alertClass = 'alert-success';\n\n          // Mettre à jour les informations du dernier code validé\n          this.lastValidatedCode = {\n            date: new Date().toLocaleDateString(),\n            code: this.code,\n            gain: response.data.gain,\n            expiryDate: new Date(new Date().setDate(new Date().getDate() + 30)).toLocaleDateString()\n          };\n        } else {\n          // Message d'erreur pour un code invalide\n          this.alertMessage = 'Code invalide.';\n          this.alertClass = 'alert-error';\n        }\n      } catch (error) {\n        // Gérer les erreurs\n        if (error.response && error.response.status === 404) {\n          this.alertMessage = 'Code invalide.';\n        } else {\n          console.error('Erreur lors de la validation du code: ', error);\n          this.alertMessage = 'Erreur lors de la validation du code.';\n        }\n        this.alertClass = 'alert-error';\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","code","lastValidatedCode","alertMessage","alertClass","methods","validateCode","response","post","status","message","date","Date","toLocaleDateString","gain","expiryDate","setDate","getDate","error","console"],"sources":["/Users/auroremalie/ttpjc/src/views/AdminDashboard.vue"],"sourcesContent":["<template>\n  <div class=\"admin-dashboard\">\n    <!-- Section 1 -->\n    <section class=\"section-greeting\">\n      <h1>Partageons notre positivi-thé !</h1>\n      <form class=\"code-form\" @submit.prevent=\"validateCode\">\n        <input type=\"text\" v-model=\"code\" placeholder=\"Entrer le code concours\" />\n        <button type=\"submit\">Valider</button>\n      </form>\n      <p v-if=\"alertMessage\" :class=\"alertClass\">{{ alertMessage }}</p>\n    </section>\n\n    <!-- Section 2 -->\n    <section v-if=\"lastValidatedCode\" class=\"section-history\">\n      <h2>Informations sur le code validé</h2>\n      <table class=\"history-table\">\n        <thead>\n          <tr>\n            <th>Date de validation</th>\n            <th>Code concours</th>\n            <th>Gain</th>\n            <th>A retirer le plus tard</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>{{ lastValidatedCode.date }}</td>\n            <td>{{ lastValidatedCode.code }}</td>\n            <td>{{ lastValidatedCode.gain }}</td>\n            <td>{{ lastValidatedCode.expiryDate }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </section>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: \"AdminDashboard\",\n  data() {\n    return {\n      code: '', // Code saisi par l'administrateur\n      lastValidatedCode: null, // Dernier code validé (informations à afficher)\n      alertMessage: '', // Message d'alerte pour la validation\n      alertClass: '' // Classe CSS pour l'alerte (success ou error)\n    };\n  },\n  methods: {\n    async validateCode() {\n      try {\n        // Envoyer le code saisi pour validation\n        const response = await axios.post('http://localhost:3000/validate-code', { code: this.code });\n        \n        if (response.status === 200 && response.data.message === 'Code valide !') {\n          this.alertMessage = 'Code valide !';\n          this.alertClass = 'alert-success';\n          \n          // Mettre à jour les informations du dernier code validé\n          this.lastValidatedCode = {\n            date: new Date().toLocaleDateString(),\n            code: this.code,\n            gain: response.data.gain,\n            expiryDate: new Date(new Date().setDate(new Date().getDate() + 30)).toLocaleDateString()\n          };\n          \n        } else {\n          // Message d'erreur pour un code invalide\n          this.alertMessage = 'Code invalide.';\n          this.alertClass = 'alert-error';\n        }\n        \n      } catch (error) {\n        // Gérer les erreurs\n        if (error.response && error.response.status === 404) {\n          this.alertMessage = 'Code invalide.';\n        } else {\n          console.error('Erreur lors de la validation du code: ', error);\n          this.alertMessage = 'Erreur lors de la validation du code.';\n        }\n        this.alertClass = 'alert-error';\n      }\n    }\n  }\n};\n</script>\n\n\n<style scoped>\n/* Styles pour les alertes */\n.alert-success {\n  color: green;\n}\n\n.alert-error {\n  color: red;\n}\n\n.admin-dashboard {\n  padding: 20px;\n}\n\n.section-greeting {\n  margin-bottom: 40px;\n}\n\n.section-greeting h1 {\n  font-weight: bold;\n  margin-bottom: 20px;\n  text-align: left; /* Alignement à gauche */\n}\n\n.code-form {\n  display: flex;\n  align-items: center;\n}\n\n.code-form input {\n  flex: 1;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  margin-right: 20px; /* Espace entre l'input et le bouton */\n}\n\n.code-form button {\n  padding: 10px 30px; /* Augmenter la largeur du bouton */\n  background-color: #678d72; /* Nouvelle couleur de fond */\n  color: white;\n  border: none;\n  border-radius: 5px; /* Bordure arrondie du bouton */\n  cursor: pointer;\n}\n\n.section-history {\n  margin-top: 40px;\n}\n\n.section-history h2 {\n  font-weight: bold;\n  margin-bottom: 20px;\n  text-align: left; /* Alignement à gauche */\n}\n\n.history-table-wrapper {\n  overflow: hidden; /* Assure que les bordures arrondies ne débordent pas */\n}\n\n.history-table {\n  width: 100%;\n  border-collapse: separate; /* Permet de voir l'espace entre les lignes */\n  border-spacing: 0 10px; /* Espace entre les lignes pour voir la background color */\n  background-color: #f3ede0;\n  border: 2px solid #000; /* Bordure extérieure */\n  border-radius: 15px; /* Bordure arrondie pour l'ensemble du tableau */\n  padding: 10px; /* Padding pour éviter que les lignes touchent les bords */\n  box-sizing: border-box; /* S'assure que le padding est inclus dans la largeur */\n}\n\n.history-table th {\n  padding: 15px;\n  text-align: left;\n  color: black;\n  background-color: #f3ede0; /* Même couleur que le fond de la table */\n}\n\n.history-table td {\n  padding: 15px;\n  text-align: left;\n  background-color: #a3bfab; /* Couleur des lignes */\n  color: white;\n  border: none; /* Supprimer la bordure entre les cellules */\n}\n\n/* Bordure arrondie pour chaque ligne */\n.history-table tr {\n  border-radius: 50px;\n  overflow: hidden; /* Assure que les coins arrondis sont visibles */\n}\n\n.history-table tr:not(:last-child) {\n  margin-bottom: 10px; /* Espace entre les lignes */\n}\n</style>\n"],"mappings":"AAsCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,EAAE;MAAE;MACVC,iBAAiB,EAAE,IAAI;MAAE;MACzBC,YAAY,EAAE,EAAE;MAAE;MAClBC,UAAU,EAAE,EAAC,CAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAMT,KAAK,CAACU,IAAI,CAAC,qCAAqC,EAAE;UAAEP,IAAI,EAAE,IAAI,CAACA;QAAK,CAAC,CAAC;QAE7F,IAAIM,QAAQ,CAACE,MAAK,KAAM,GAAE,IAAKF,QAAQ,CAACP,IAAI,CAACU,OAAM,KAAM,eAAe,EAAE;UACxE,IAAI,CAACP,YAAW,GAAI,eAAe;UACnC,IAAI,CAACC,UAAS,GAAI,eAAe;;UAEjC;UACA,IAAI,CAACF,iBAAgB,GAAI;YACvBS,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC;YACrCZ,IAAI,EAAE,IAAI,CAACA,IAAI;YACfa,IAAI,EAAEP,QAAQ,CAACP,IAAI,CAACc,IAAI;YACxBC,UAAU,EAAE,IAAIH,IAAI,CAAC,IAAIA,IAAI,CAAC,CAAC,CAACI,OAAO,CAAC,IAAIJ,IAAI,CAAC,CAAC,CAACK,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAACJ,kBAAkB,CAAC;UACzF,CAAC;QAEH,OAAO;UACL;UACA,IAAI,CAACV,YAAW,GAAI,gBAAgB;UACpC,IAAI,CAACC,UAAS,GAAI,aAAa;QACjC;MAEF,EAAE,OAAOc,KAAK,EAAE;QACd;QACA,IAAIA,KAAK,CAACX,QAAO,IAAKW,KAAK,CAACX,QAAQ,CAACE,MAAK,KAAM,GAAG,EAAE;UACnD,IAAI,CAACN,YAAW,GAAI,gBAAgB;QACtC,OAAO;UACLgB,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;UAC9D,IAAI,CAACf,YAAW,GAAI,uCAAuC;QAC7D;QACA,IAAI,CAACC,UAAS,GAAI,aAAa;MACjC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}