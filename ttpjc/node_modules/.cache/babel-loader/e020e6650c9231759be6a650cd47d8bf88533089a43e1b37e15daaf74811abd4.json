{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3808d382\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"admin-dashboard\"\n};\nconst _hoisted_2 = {\n  class: \"section-greeting\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Partageons notre positivi-thé !\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Valider\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  key: 0,\n  class: \"section-history\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Informations sur le code validé\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"history-table\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Date de validation\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Code concours\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Gain\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"A retirer le plus tard\")])], -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Section 1 \"), _createElementVNode(\"section\", _hoisted_2, [_hoisted_3, _createElementVNode(\"form\", {\n    class: \"code-form\",\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.validateCode && $options.validateCode(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.code = $event),\n    placeholder: \"Entrer le code concours\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.code]]), _hoisted_4], 32 /* NEED_HYDRATION */), $data.alertMessage ? (_openBlock(), _createElementBlock(\"p\", {\n    key: 0,\n    class: _normalizeClass($data.alertClass)\n  }, _toDisplayString($data.alertMessage), 3 /* TEXT, CLASS */)) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" Section 2 \"), $data.lastValidatedCode ? (_openBlock(), _createElementBlock(\"section\", _hoisted_5, [_hoisted_6, _createElementVNode(\"table\", _hoisted_7, [_hoisted_8, _createElementVNode(\"tbody\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"td\", null, _toDisplayString($data.lastValidatedCode.date), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($data.lastValidatedCode.code), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($data.lastValidatedCode.gain), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($data.lastValidatedCode.expiryDate), 1 /* TEXT */)])])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","type","key","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","_hoisted_3","onSubmit","_cache","_withModifiers","args","$options","validateCode","$event","$data","code","placeholder","_hoisted_4","alertMessage","_normalizeClass","alertClass","lastValidatedCode","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_toDisplayString","date","gain","expiryDate"],"sources":["/Users/auroremalie/ttpjc/src/views/AdminDashboard.vue"],"sourcesContent":["<template>\n  <div class=\"admin-dashboard\">\n    <!-- Section 1 -->\n    <section class=\"section-greeting\">\n      <h1>Partageons notre positivi-thé !</h1>\n      <form class=\"code-form\" @submit.prevent=\"validateCode\">\n        <input type=\"text\" v-model=\"code\" placeholder=\"Entrer le code concours\" />\n        <button type=\"submit\">Valider</button>\n      </form>\n      <p v-if=\"alertMessage\" :class=\"alertClass\">{{ alertMessage }}</p>\n    </section>\n\n    <!-- Section 2 -->\n    <section v-if=\"lastValidatedCode\" class=\"section-history\">\n      <h2>Informations sur le code validé</h2>\n      <table class=\"history-table\">\n        <thead>\n          <tr>\n            <th>Date de validation</th>\n            <th>Code concours</th>\n            <th>Gain</th>\n            <th>A retirer le plus tard</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>{{ lastValidatedCode.date }}</td>\n            <td>{{ lastValidatedCode.code }}</td>\n            <td>{{ lastValidatedCode.gain }}</td>\n            <td>{{ lastValidatedCode.expiryDate }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </section>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: \"AdminDashboard\",\n  data() {\n    return {\n      code: '', // Code saisi par l'administrateur\n      lastValidatedCode: null, // Dernier code validé (informations à afficher)\n      alertMessage: '', // Message d'alerte pour la validation\n      alertClass: '' // Classe CSS pour l'alerte (success ou error)\n    };\n  },\n  methods: {\n    async validateCode() {\n      try {\n        // Envoyer le code saisi pour validation\n        const response = await axios.post('http://localhost:3000/validate-code', { code: this.code });\n        \n        if (response.status === 200 && response.data.message === 'Code valide !') {\n          this.alertMessage = 'Code valide !';\n          this.alertClass = 'alert-success';\n          \n          // Mettre à jour les informations du dernier code validé\n          this.lastValidatedCode = {\n            date: new Date().toLocaleDateString(),\n            code: this.code,\n            gain: response.data.gain,\n            expiryDate: new Date(new Date().setDate(new Date().getDate() + 30)).toLocaleDateString()\n          };\n          \n        } else {\n          // Message d'erreur pour un code invalide\n          this.alertMessage = 'Code invalide.';\n          this.alertClass = 'alert-error';\n        }\n        \n      } catch (error) {\n        // Gérer les erreurs\n        if (error.response && error.response.status === 404) {\n          this.alertMessage = 'Code invalide.';\n        } else {\n          console.error('Erreur lors de la validation du code: ', error);\n          this.alertMessage = 'Erreur lors de la validation du code.';\n        }\n        this.alertClass = 'alert-error';\n      }\n    }\n  }\n};\n</script>\n\n\n<style scoped>\n/* Styles pour les alertes */\n.alert-success {\n  color: green;\n}\n\n.alert-error {\n  color: red;\n}\n\n.admin-dashboard {\n  padding: 20px;\n}\n\n.section-greeting {\n  margin-bottom: 40px;\n}\n\n.section-greeting h1 {\n  font-weight: bold;\n  margin-bottom: 20px;\n  text-align: left; /* Alignement à gauche */\n}\n\n.code-form {\n  display: flex;\n  align-items: center;\n}\n\n.code-form input {\n  flex: 1;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  margin-right: 20px; /* Espace entre l'input et le bouton */\n}\n\n.code-form button {\n  padding: 10px 30px; /* Augmenter la largeur du bouton */\n  background-color: #678d72; /* Nouvelle couleur de fond */\n  color: white;\n  border: none;\n  border-radius: 5px; /* Bordure arrondie du bouton */\n  cursor: pointer;\n}\n\n.section-history {\n  margin-top: 40px;\n}\n\n.section-history h2 {\n  font-weight: bold;\n  margin-bottom: 20px;\n  text-align: left; /* Alignement à gauche */\n}\n\n.history-table-wrapper {\n  overflow: hidden; /* Assure que les bordures arrondies ne débordent pas */\n}\n\n.history-table {\n  width: 100%;\n  border-collapse: separate; /* Permet de voir l'espace entre les lignes */\n  border-spacing: 0 10px; /* Espace entre les lignes pour voir la background color */\n  background-color: #f3ede0;\n  border: 2px solid #000; /* Bordure extérieure */\n  border-radius: 15px; /* Bordure arrondie pour l'ensemble du tableau */\n  padding: 10px; /* Padding pour éviter que les lignes touchent les bords */\n  box-sizing: border-box; /* S'assure que le padding est inclus dans la largeur */\n}\n\n.history-table th {\n  padding: 15px;\n  text-align: left;\n  color: black;\n  background-color: #f3ede0; /* Même couleur que le fond de la table */\n}\n\n.history-table td {\n  padding: 15px;\n  text-align: left;\n  background-color: #a3bfab; /* Couleur des lignes */\n  color: white;\n  border: none; /* Supprimer la bordure entre les cellules */\n}\n\n/* Bordure arrondie pour chaque ligne */\n.history-table tr {\n  border-radius: 50px;\n  overflow: hidden; /* Assure que les coins arrondis sont visibles */\n}\n\n.history-table tr:not(:last-child) {\n  margin-bottom: 10px; /* Espace entre les lignes */\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAiB;;EAEjBA,KAAK,EAAC;AAAkB;gEAC/BC,mBAAA,CAAwC,YAApC,iCAA+B;gEAGjCA,mBAAA,CAAsC;EAA9BC,IAAI,EAAC;AAAQ,GAAC,SAAO;;EAPrCC,GAAA;EAasCH,KAAK,EAAC;;gEACtCC,mBAAA,CAAwC,YAApC,iCAA+B;;EAC5BD,KAAK,EAAC;AAAe;gEAC1BC,mBAAA,CAOQ,gB,aANNA,mBAAA,CAKK,a,aAJHA,mBAAA,CAA2B,YAAvB,oBAAkB,G,aACtBA,mBAAA,CAAsB,YAAlB,eAAa,G,aACjBA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAA+B,YAA3B,wBAAsB,E;;uBApBpCG,mBAAA,CAiCM,OAjCNC,UAiCM,GAhCJC,mBAAA,eAAkB,EAClBL,mBAAA,CAOU,WAPVM,UAOU,GANRC,UAAwC,EACxCP,mBAAA,CAGO;IAHDD,KAAK,EAAC,WAAW;IAAES,QAAM,EAAAC,MAAA,QAAAA,MAAA,MALrCC,cAAA,KAAAC,IAAA,KAK+CC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;sBACnDX,mBAAA,CAA0E;IAAnEC,IAAI,EAAC,MAAM;IAN1B,uBAAAQ,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAMoCC,KAAA,CAAAC,IAAI,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAAlBF,KAAA,CAAAC,IAAI,E,GAChCE,UAAsC,C,4BAE/BH,KAAA,CAAAI,YAAY,I,cAArBhB,mBAAA,CAAiE;IATvED,GAAA;IAS8BH,KAAK,EATnCqB,eAAA,CASqCL,KAAA,CAAAM,UAAU;sBAAKN,KAAA,CAAAI,YAAY,2BAThEd,mBAAA,e,GAYIA,mBAAA,eAAkB,EACHU,KAAA,CAAAO,iBAAiB,I,cAAhCnB,mBAAA,CAoBU,WApBVoB,UAoBU,GAnBRC,UAAwC,EACxCxB,mBAAA,CAiBQ,SAjBRyB,UAiBQ,GAhBNC,UAOQ,EACR1B,mBAAA,CAOQ,gBANNA,mBAAA,CAKK,aAJHA,mBAAA,CAAqC,YAAA2B,gBAAA,CAA9BZ,KAAA,CAAAO,iBAAiB,CAACM,IAAI,kBAC7B5B,mBAAA,CAAqC,YAAA2B,gBAAA,CAA9BZ,KAAA,CAAAO,iBAAiB,CAACN,IAAI,kBAC7BhB,mBAAA,CAAqC,YAAA2B,gBAAA,CAA9BZ,KAAA,CAAAO,iBAAiB,CAACO,IAAI,kBAC7B7B,mBAAA,CAA2C,YAAA2B,gBAAA,CAApCZ,KAAA,CAAAO,iBAAiB,CAACQ,UAAU,iB,WA7B/CzB,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}