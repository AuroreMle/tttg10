{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/assets/logotype.png';\nconst _withScopeId = n => (_pushScopeId(\"data-v-082d1874\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"participer-page\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<img src=\\\"\" + _imports_0 + \"\\\" alt=\\\"Logo TheTipTop\\\" class=\\\"logotype-image\\\" data-v-082d1874><p class=\\\"instruction-text\\\" data-v-082d1874>Connectez-vous à votre espace personnel</p><button class=\\\"connexion-button facebook-button\\\" data-v-082d1874>Se connecter avec Facebook</button><button class=\\\"connexion-button google-button\\\" data-v-082d1874>Se connecter avec Google</button><div class=\\\"divider\\\" data-v-082d1874><span data-v-082d1874>OU</span></div>\", 5);\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"submit-button\"\n}, \"Se connecter\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"form\", {\n    class: \"signup-form\",\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.login && $options.login(...args), [\"prevent\"]))\n  }, [_createCommentVNode(\" Ajout de @submit.prevent pour gérer la soumission \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n    type: \"email\",\n    placeholder: \"Email\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    type: \"password\",\n    placeholder: \"Mot de passe\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]]), _hoisted_7], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["_imports_0","class","_createStaticVNode","_createElementVNode","type","_createElementBlock","_hoisted_1","_hoisted_2","onSubmit","_cache","_withModifiers","args","$options","login","_createCommentVNode","$event","$data","email","placeholder","required","password","_hoisted_7"],"sources":["/Users/auroremalie/ttpjc/src/views/UserConnexion.vue"],"sourcesContent":["<template>\n  <div class=\"participer-page\">\n    <img src=\"@/assets/logotype.png\" alt=\"Logo TheTipTop\" class=\"logotype-image\"/>\n    <p class=\"instruction-text\">Connectez-vous à votre espace personnel</p>\n    \n    <button class=\"connexion-button facebook-button\">Se connecter avec Facebook</button>\n    <button class=\"connexion-button google-button\">Se connecter avec Google</button>\n    \n    <div class=\"divider\">\n      <span>OU</span>\n    </div>\n    \n    <form class=\"signup-form\" @submit.prevent=\"login\"> <!-- Ajout de @submit.prevent pour gérer la soumission -->\n      <input v-model=\"email\" type=\"email\" placeholder=\"Email\" required />\n      <input v-model=\"password\" type=\"password\" placeholder=\"Mot de passe\" required />\n      \n      <button type=\"submit\" class=\"submit-button\">Se connecter</button>\n    </form>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'UserConnexion',\n  data() {\n    return {\n      email: '',\n      password: ''\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await fetch('http://localhost:3000/login/user', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: this.email,\n            password: this.password\n          })\n        });\n\n        const data = await response.json();\n        if (response.ok) {\n          // Stocker l'ID utilisateur et le rôle dans le localStorage\n          localStorage.setItem('userId', data.user.id);\n          localStorage.setItem('userRole', 'user'); // Stocker le rôle 'user'\n\n          // Emettre un événement de connexion réussie\n          this.$emit('login-success');\n          \n          alert('Connexion réussie!');\n          this.$router.push('/user/dashboard');\n        } else {\n          alert(data.message);\n        }\n      } catch (error) {\n        console.error('Erreur:', error);\n      }\n    }\n  }\n};\n</script>\n\n\n\n\n<style scoped>\n.participer-page {\n  width: 95%;\n  max-width: 800px;\n  margin: 20px ;\n  padding: 20px;\n  background-color: #F3EDE0;\n  border-radius: 10px;\n  text-align: center;\n  min-height: 700px; /* Hauteur ajustée */\n}\n\n.logotype-image {\n  width: 120px; /* Taille originale du logo */\n  margin-bottom: 20px;\n}\n\n.instruction-text {\n  font-size: 1.2rem;\n  margin-bottom: 20px;\n}\n\n.connexion-button {\n  background-color: #A3BFAB;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  font-family: Lato;\n  margin: 10px 0;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 1rem;\n  width: 100%;\n  max-width: 500px; /* Largeur maximale des boutons */\n}\n\n.google-button {\n  margin-top: 20px; /* Espacement de 20 px entre les boutons */\n}\n\n.divider {\n  margin: 20px 0;\n  border-top: 5px solid #A3BFAB;\n  position: relative;\n  text-align: center;\n}\n\n.divider span {\n  position: absolute;\n  top: -12px;\n  left: 50%;\n  transform: translateX(-50%);\n  background: #F3EDE0; /* Couleur de fond du diviseur */\n  padding: 0 10px;\n  font-size: 1rem;\n  color: black; /* Couleur du texte du diviseur */\n}\n\n.signup-form {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.signup-form input {\n  width: 100%;\n  max-width: 500px; /* Largeur maximale des champs de formulaire */\n  padding: 10px;\n  margin: 10px 0; /* Espacement entre les champs */\n  border: 1px solid #243B3B;\n  border-radius: 5px;\n}\n\n.submit-button {\n  background-color: #678D72;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  margin-top: 20px;\n  border-radius: 5px;\n  cursor: pointer;\n  width: 100%;\n  max-width: 500px; /* Largeur maximale du bouton */\n  font-size: 1rem;\n}\n</style>\n\n<style scoped>\n.participer-page {\n  width: 95%;\n  max-width: 800px;\n  margin: 20px auto;\n  padding: 20px;\n  background-color: #F3EDE0;\n  border-radius: 10px;\n  text-align: center;\n  min-height: 520px; \n}\n\n.logotype-image {\n  width: 360px; \n  margin-bottom: 20px;\n}\n\n.instruction-text {\n  font-size: 1.2rem;\n  margin-bottom: 20px;\n}\n\n.signup-button {\n  background-color: #A3BFAB;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  font-family: Lato;\n  margin: 10px 0;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 1rem;\n  width: 100%;\n  max-width: 500px; /* Largeur maximale des boutons */\n}\n\n.google-button {\n  margin-top: 20px; /* Espacement de 20 px entre les boutons */\n}\n\n.divider {\n  margin: 20px 0;\n  border-top: 5px solid #A3BFAB;\n  position: relative;\n  text-align: center;\n}\n\n.divider span {\n  position: absolute;\n  top: -12px;\n  left: 50%;\n  transform: translateX(-50%);\n  background: #F3EDE0; /* Couleur de fond du diviseur */\n  padding: 0 10px;\n  font-size: 1rem;\n  color: black; /* Couleur du texte du diviseur */\n}\n\n.signup-form {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.signup-form input {\n  width: 100%;\n  max-width: 500px; /* Largeur maximale des champs de formulaire */\n  padding: 10px;\n  margin: 10px 0; /* Espacement entre les champs */\n  border: 1px solid #243B3B;\n  border-radius: 5px;\n}\n\n.terms-text {\n  font-size: 0.9rem;\n  color: black; /* Couleur normale du texte pour les conditions générales */\n  margin: 10px 0;\n}\n\n.submit-button {\n  background-color: #678D72;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  margin-top: 20px;\n  border-radius: 5px;\n  cursor: pointer;\n  width: 100%;\n  max-width: 500px; /* Largeur maximale du bouton */\n  font-size: 1rem;\n}\n</style>"],"mappings":";OAESA,UAA2B;;;EAD7BC,KAAK,EAAC;AAAiB;gCAD9BC,kBAAA,iBAAAF,UAAA;gEAgBMG,mBAAA,CAAiE;EAAzDC,IAAI,EAAC,QAAQ;EAACH,KAAK,EAAC;GAAgB,cAAY;;uBAf5DI,mBAAA,CAiBM,OAjBNC,UAiBM,GAhBJC,UAA8E,EAU9EJ,mBAAA,CAKO;IALDF,KAAK,EAAC,aAAa;IAAEO,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAZrCC,cAAA,KAAAC,IAAA,KAY+CC,QAAA,CAAAC,KAAA,IAAAD,QAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;MAAGG,mBAAA,uDAA0D,E,gBAC3GX,mBAAA,CAAmE;IAbzE,uBAAAM,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAasBC,KAAA,CAAAC,KAAK,GAAAF,MAAA;IAAEX,IAAI,EAAC,OAAO;IAACc,WAAW,EAAC,OAAO;IAACC,QAAQ,EAAR;iDAAxCH,KAAA,CAAAC,KAAK,E,mBACrBd,mBAAA,CAAgF;IAdtF,uBAAAM,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAcsBC,KAAA,CAAAI,QAAQ,GAAAL,MAAA;IAAEX,IAAI,EAAC,UAAU;IAACc,WAAW,EAAC,cAAc;IAACC,QAAQ,EAAR;iDAArDH,KAAA,CAAAI,QAAQ,E,GAExBC,UAAiE,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}