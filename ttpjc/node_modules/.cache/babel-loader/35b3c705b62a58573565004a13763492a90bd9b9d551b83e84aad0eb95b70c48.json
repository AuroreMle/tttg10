{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'UserConnexion',\n  data() {\n    return {\n      email: '',\n      password: ''\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await fetch('http://localhost:3000/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: this.email,\n            password: this.password\n          })\n        });\n        const data = await response.json();\n        if (response.ok) {\n          alert('Connexion réussie!');\n          this.$router.push('/dashboard'); // Redirection vers le tableau de bord après la connexion réussie\n        } else {\n          alert(data.message);\n        }\n      } catch (error) {\n        console.error('Erreur:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","email","password","methods","login","response","fetch","method","headers","body","JSON","stringify","json","ok","alert","$router","push","message","error","console"],"sources":["/Users/auroremalie/ttpjc/src/views/UserConnexion.vue"],"sourcesContent":["<template>\n  <div class=\"connexion-page\">\n    <img src=\"@/assets/logotype.png\" alt=\"Logotype\" class=\"logotype-image\" />\n    <h2>Connexion</h2>\n    <form @submit.prevent=\"login\" class=\"login-form\">\n      <input v-model=\"email\" type=\"email\" placeholder=\"Email\" required />\n      <input v-model=\"password\" type=\"password\" placeholder=\"Mot de passe\" required />\n      <button type=\"submit\" class=\"submit-button\">Se connecter</button>\n    </form>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'UserConnexion',\n  data() {\n    return {\n      email: '',\n      password: ''\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await fetch('http://localhost:3000/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: this.email,\n            password: this.password\n          })\n        });\n\n        const data = await response.json();\n        if (response.ok) {\n          alert('Connexion réussie!');\n          this.$router.push('/dashboard'); // Redirection vers le tableau de bord après la connexion réussie\n        } else {\n          alert(data.message);\n        }\n      } catch (error) {\n        console.error('Erreur:', error);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.participer-page {\n  width: 95%;\n  max-width: 800px;\n  margin: 20px auto;\n  padding: 20px;\n  background-color: #F3EDE0;\n  border-radius: 10px;\n  text-align: center;\n  min-height: 520px; \n}\n\n.logotype-image {\n  width: 360px; \n  margin-bottom: 20px;\n}\n\n.instruction-text {\n  font-size: 1.2rem;\n  margin-bottom: 20px;\n}\n\n.signup-button {\n  background-color: #A3BFAB;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  font-family: Lato;\n  margin: 10px 0;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 1rem;\n  width: 100%;\n  max-width: 500px; /* Largeur maximale des boutons */\n}\n\n.google-button {\n  margin-top: 20px; /* Espacement de 20 px entre les boutons */\n}\n\n.divider {\n  margin: 20px 0;\n  border-top: 5px solid #A3BFAB;\n  position: relative;\n  text-align: center;\n}\n\n.divider span {\n  position: absolute;\n  top: -12px;\n  left: 50%;\n  transform: translateX(-50%);\n  background: #F3EDE0; /* Couleur de fond du diviseur */\n  padding: 0 10px;\n  font-size: 1rem;\n  color: black; /* Couleur du texte du diviseur */\n}\n\n.signup-form {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.signup-form input {\n  width: 100%;\n  max-width: 500px; /* Largeur maximale des champs de formulaire */\n  padding: 10px;\n  margin: 10px 0; /* Espacement entre les champs */\n  border: 1px solid #243B3B;\n  border-radius: 5px;\n}\n\n.terms-text {\n  font-size: 0.9rem;\n  color: black; /* Couleur normale du texte pour les conditions générales */\n  margin: 10px 0;\n}\n\n.submit-button {\n  background-color: #678D72;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  margin-top: 20px;\n  border-radius: 5px;\n  cursor: pointer;\n  width: 100%;\n  max-width: 500px; /* Largeur maximale du bouton */\n  font-size: 1rem;\n}\n</style>"],"mappings":";AAaA,eAAe;EACbA,IAAI,EAAE,eAAe;EACrBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MACZ,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,6BAA6B,EAAE;UAC1DC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBV,KAAK,EAAE,IAAI,CAACA,KAAK;YACjBC,QAAQ,EAAE,IAAI,CAACA;UACjB,CAAC;QACH,CAAC,CAAC;QAEF,MAAMF,IAAG,GAAI,MAAMK,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClC,IAAIP,QAAQ,CAACQ,EAAE,EAAE;UACfC,KAAK,CAAC,oBAAoB,CAAC;UAC3B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,YAAY,CAAC,EAAE;QACnC,OAAO;UACLF,KAAK,CAACd,IAAI,CAACiB,OAAO,CAAC;QACrB;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;MACjC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}