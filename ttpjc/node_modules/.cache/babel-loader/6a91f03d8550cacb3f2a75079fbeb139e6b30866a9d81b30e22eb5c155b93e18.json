{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-99406282\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"user-dashboard\"\n};\nconst _hoisted_2 = {\n  class: \"section-greeting\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Bonjour, comment gagnez-vous aujourd’hui ?\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Valider\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"section-history\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Historique des gains\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"history-table-wrapper\"\n};\nconst _hoisted_8 = {\n  class: \"history-table\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Date de validation\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Code concours\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Gain\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"A retirer le plus tard\")])], -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Section 1 \"), _createElementVNode(\"section\", _hoisted_2, [_hoisted_3, _createElementVNode(\"form\", {\n    class: \"code-form\",\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.validateCode && $options.validateCode(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.code = $event),\n    placeholder: \"Entrer le code concours\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.code]]), _hoisted_4], 32 /* NEED_HYDRATION */), $data.alertMessage ? (_openBlock(), _createElementBlock(\"p\", {\n    key: 0,\n    class: _normalizeClass($data.alertClass)\n  }, _toDisplayString($data.alertMessage), 3 /* TEXT, CLASS */)) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" Section 2 \"), _createElementVNode(\"section\", _hoisted_5, [_hoisted_6, _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"table\", _hoisted_8, [_hoisted_9, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.history, (entry, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(entry.date), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(entry.code), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(entry.gain), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(entry.expiryDate), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","type","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","_hoisted_3","onSubmit","_cache","_withModifiers","args","$options","validateCode","$event","$data","code","placeholder","_hoisted_4","alertMessage","key","_normalizeClass","alertClass","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_Fragment","_renderList","history","entry","index","_toDisplayString","date","gain","expiryDate"],"sources":["/Users/auroremalie/ttpjc/src/views/UserDashboard.vue"],"sourcesContent":["<template>\n  <div class=\"user-dashboard\">\n    <!-- Section 1 -->\n    <section class=\"section-greeting\">\n      <h1>Bonjour, comment gagnez-vous aujourd’hui ?</h1>\n      <form class=\"code-form\" @submit.prevent=\"validateCode\">\n        <input type=\"text\" v-model=\"code\" placeholder=\"Entrer le code concours\" />\n        <button type=\"submit\">Valider</button>\n      </form>\n      <p v-if=\"alertMessage\" :class=\"alertClass\">{{ alertMessage }}</p>\n    </section>\n\n    <!-- Section 2 -->\n    <section class=\"section-history\">\n      <h2>Historique des gains</h2>\n      <div class=\"history-table-wrapper\">\n        <table class=\"history-table\">\n          <thead>\n            <tr>\n              <th>Date de validation</th>\n              <th>Code concours</th>\n              <th>Gain</th>\n              <th>A retirer le plus tard</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(entry, index) in history\" :key=\"index\">\n              <td>{{ entry.date }}</td>\n              <td>{{ entry.code }}</td>\n              <td>{{ entry.gain }}</td>\n              <td>{{ entry.expiryDate }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: \"UserDashboard\",\n  data() {\n    return {\n      code: '',\n      history: [],\n      alertMessage: '',\n      alertClass: '',\n      userId: null\n    };\n  },\n  methods: {\n    async validateCode() {\n      try {\n        const response = await axios.post('http://localhost:3000/validate-code', { userId: this.userId, code: this.code });\n        if (response.status === 200 && response.data.message === 'Code valide !') {\n          this.alertMessage = 'Code valide !';\n          this.alertClass = 'alert-success';\n\n          const newEntry = {\n            date: new Date().toLocaleDateString(),\n            code: this.code,\n            gain: response.data.gain,\n            expiryDate: new Date(new Date().setDate(new Date().getDate() + 30)).toLocaleDateString()\n          };\n          this.history.push(newEntry);\n        } else {\n          this.alertMessage = 'Code invalide.';\n          this.alertClass = 'alert-error';\n        }\n      } catch (error) {\n        if (error.response && error.response.status === 404) {\n          this.alertMessage = 'Code invalide.';\n        } else {\n          console.error('Erreur lors de la validation du code: ', error);\n          this.alertMessage = 'Erreur lors de la validation du code.';\n        }\n        this.alertClass = 'alert-error';\n      }\n    },\n    async fetchHistory() {\n      try {\n        const response = await axios.get(`http://localhost:3000/user-history/${this.userId}`);\n        this.history = response.data.map(entry => ({\n          date: new Date(entry.validation_date).toLocaleDateString(),\n          code: entry.code,\n          gain: entry.gain,\n          expiryDate: new Date(entry.expiry_date).toLocaleDateString()\n        }));\n      } catch (error) {\n        console.error('Erreur lors de la récupération de l\\'historique : ', error);\n      }\n    }\n  },\n  mounted() {\n    this.userId = this.$route.params.userId || localStorage.getItem('userId');\n\n    if (this.userId) {\n      this.fetchHistory();\n    } else {\n      console.error('Erreur : userId non défini');\n      this.alertMessage = 'Erreur : ID utilisateur non fourni. Veuillez vous reconnecter.';\n      this.alertClass = 'alert-error';\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Styles pour les alertes */\n.alert-success {\n  color: green;\n}\n\n.alert-error {\n  color: red;\n}\n\n.user-dashboard {\n  padding: 20px;\n}\n\n.section-greeting {\n  margin-bottom: 20px;\n}\n\n.section-greeting h1 {\n  font-weight: bold;\n  margin-bottom: 20px;\n  text-align: center; /* Centrer le texte */\n}\n\n.code-form {\n  display: flex;\n  flex-direction: column; /* Changer la direction en colonne pour les petits écrans */\n  gap: 10px; /* Espacement entre les éléments */\n  align-items: center; /* Centrer les éléments */\n}\n\n.code-form input {\n  width: 100%; /* Largeur à 100% pour les petits écrans */\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n}\n\n.code-form button {\n  padding: 10px 20px; /* Ajuster la taille du bouton */\n  background-color: #678d72;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.section-history {\n  margin-top: 20px;\n}\n\n.section-history h2 {\n  font-weight: bold;\n  margin-bottom: 20px;\n  text-align: center; /* Centrer le texte */\n}\n\n.history-table-wrapper {\n  overflow-x: auto; /* Ajouter le défilement horizontal */\n}\n\n.history-table {\n  width: 100%;\n  border-collapse: collapse; /* Fusionner les bordures */\n  background-color: #f3ede0;\n  border: 2px solid #000;\n  border-radius: 15px;\n  overflow: hidden; /* Assurer la visibilité des coins arrondis */\n}\n\n.history-table th, .history-table td {\n  padding: 10px;\n  text-align: left;\n}\n\n.history-table th {\n  background-color: #f3ede0;\n  color: black;\n}\n\n.history-table td {\n  background-color: #a3bfab;\n  color: white;\n}\n\n/* Styles responsive */\n@media (max-width: 768px) {\n  .section-greeting {\n    margin-bottom: 20px;\n  }\n\n  .section-greeting h1 {\n    font-size: 1.2rem; /* Réduit la taille du texte du titre */\n  }\n\n  .code-form input, .code-form button {\n    width: 100%; /* Assure que les éléments du formulaire occupent toute la largeur */\n  }\n\n  .history-table {\n    border-radius: 0; /* Supprime les coins arrondis pour le tableau sur petits écrans */\n  }\n\n  .history-table th, .history-table td {\n    font-size: 0.9rem; /* Réduit la taille du texte dans le tableau */\n  }\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAgB;;EAEhBA,KAAK,EAAC;AAAkB;gEAC/BC,mBAAA,CAAmD,YAA/C,4CAA0C;gEAG5CA,mBAAA,CAAsC;EAA9BC,IAAI,EAAC;AAAQ,GAAC,SAAO;;EAMxBF,KAAK,EAAC;AAAiB;gEAC9BC,mBAAA,CAA6B,YAAzB,sBAAoB;;EACnBD,KAAK,EAAC;AAAuB;;EACzBA,KAAK,EAAC;AAAe;gEAC1BC,mBAAA,CAOQ,gB,aANNA,mBAAA,CAKK,a,aAJHA,mBAAA,CAA2B,YAAvB,oBAAkB,G,aACtBA,mBAAA,CAAsB,YAAlB,eAAa,G,aACjBA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAA+B,YAA3B,wBAAsB,E;;uBArBtCE,mBAAA,CAmCM,OAnCNC,UAmCM,GAlCJC,mBAAA,eAAkB,EAClBJ,mBAAA,CAOU,WAPVK,UAOU,GANRC,UAAmD,EACnDN,mBAAA,CAGO;IAHDD,KAAK,EAAC,WAAW;IAAEQ,QAAM,EAAAC,MAAA,QAAAA,MAAA,MALrCC,cAAA,KAAAC,IAAA,KAK+CC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;sBACnDV,mBAAA,CAA0E;IAAnEC,IAAI,EAAC,MAAM;IAN1B,uBAAAO,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAMoCC,KAAA,CAAAC,IAAI,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAAlBF,KAAA,CAAAC,IAAI,E,GAChCE,UAAsC,C,4BAE/BH,KAAA,CAAAI,YAAY,I,cAArBhB,mBAAA,CAAiE;IATvEiB,GAAA;IAS8BpB,KAAK,EATnCqB,eAAA,CASqCN,KAAA,CAAAO,UAAU;sBAAKP,KAAA,CAAAI,YAAY,2BAThEd,mBAAA,e,GAYIA,mBAAA,eAAkB,EAClBJ,mBAAA,CAsBU,WAtBVsB,UAsBU,GArBRC,UAA6B,EAC7BvB,mBAAA,CAmBM,OAnBNwB,UAmBM,GAlBJxB,mBAAA,CAiBQ,SAjBRyB,UAiBQ,GAhBNC,UAOQ,EACR1B,mBAAA,CAOQ,iB,kBANNE,mBAAA,CAKKyB,SAAA,QA/BjBC,WAAA,CA0ByCd,KAAA,CAAAe,OAAO,EA1BhD,CA0BwBC,KAAK,EAAEC,KAAK;yBAAxB7B,mBAAA,CAKK;MALkCiB,GAAG,EAAEY;IAAK,IAC/C/B,mBAAA,CAAyB,YAAAgC,gBAAA,CAAlBF,KAAK,CAACG,IAAI,kBACjBjC,mBAAA,CAAyB,YAAAgC,gBAAA,CAAlBF,KAAK,CAACf,IAAI,kBACjBf,mBAAA,CAAyB,YAAAgC,gBAAA,CAAlBF,KAAK,CAACI,IAAI,kBACjBlC,mBAAA,CAA+B,YAAAgC,gBAAA,CAAxBF,KAAK,CAACK,UAAU,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}