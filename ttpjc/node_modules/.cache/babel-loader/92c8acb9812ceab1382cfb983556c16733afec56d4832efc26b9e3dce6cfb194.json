{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/assets/logotype.png';\nconst _withScopeId = n => (_pushScopeId(\"data-v-1b190cd3\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"participer-page\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<img src=\\\"\" + _imports_0 + \"\\\" alt=\\\"Logotype\\\" class=\\\"logotype-image\\\" data-v-1b190cd3><p class=\\\"instruction-text\\\" data-v-1b190cd3>Inscrivez-vous en tant qu&#39;administrateur</p><button class=\\\"signup-button facebook-button\\\" data-v-1b190cd3>S’inscrire avec Facebook</button><button class=\\\"signup-button google-button\\\" data-v-1b190cd3>S’inscrire avec Google</button><div class=\\\"divider\\\" data-v-1b190cd3><span data-v-1b190cd3>OU</span></div>\", 5);\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"terms-text\"\n}, \"En vous inscrivant, vous acceptez nos Conditions générales\", -1 /* HOISTED */));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"submit-button\"\n}, \"S’inscrire\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"form\", {\n    class: \"signup-form\",\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.signupAdmin && $options.signupAdmin(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.fullName = $event),\n    type: \"text\",\n    placeholder: \"Prénom et Nom\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.fullName]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.email = $event),\n    type: \"email\",\n    placeholder: \"Email\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.password = $event),\n    type: \"password\",\n    placeholder: \"Mot de passe\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]]), _hoisted_7, _hoisted_8], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["_imports_0","class","_createStaticVNode","_createElementVNode","type","_createElementBlock","_hoisted_1","_hoisted_2","onSubmit","_cache","_withModifiers","args","$options","signupAdmin","$event","$data","fullName","placeholder","required","email","password","_hoisted_7","_hoisted_8"],"sources":["/Users/auroremalie/ttpjc/src/views/ParticiperAdminPage.vue"],"sourcesContent":["<template>\n  <div class=\"participer-page\">\n    <img src=\"@/assets/logotype.png\" alt=\"Logotype\" class=\"logotype-image\"/>\n    <p class=\"instruction-text\">Inscrivez-vous en tant qu'administrateur</p>\n    \n    <button class=\"signup-button facebook-button\">S’inscrire avec Facebook</button>\n    <button class=\"signup-button google-button\">S’inscrire avec Google</button>\n    \n    <div class=\"divider\">\n      <span>OU</span>\n    </div>\n    \n    <form class=\"signup-form\" @submit.prevent=\"signupAdmin\">\n      <input v-model=\"fullName\" type=\"text\" placeholder=\"Prénom et Nom\" required />\n      <input v-model=\"email\" type=\"email\" placeholder=\"Email\" required />\n      <input v-model=\"password\" type=\"password\" placeholder=\"Mot de passe\" required />\n      \n      <p class=\"terms-text\">En vous inscrivant, vous acceptez nos Conditions générales</p>\n      \n      <button type=\"submit\" class=\"submit-button\">S’inscrire</button>\n    </form>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ParticiperAdminPage',\n  data() {\n    return {\n      fullName: '',\n      email: '',\n      password: ''\n    };\n  },\n  methods: {\n    async signupAdmin() {\n      try {\n        const response = await fetch('http://localhost:3000/signup/admin', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: this.fullName,\n            email: this.email,\n            password: this.password,\n            role: 'admin' // Spécifie que c'est un admin\n          })\n        });\n\n        const data = await response.json();\n        if (response.ok) {\n          alert('Inscription administrateur réussie!');\n          this.$router.push('/admin/connexion'); // Redirection vers la page de connexion admin\n        } else {\n          alert(data.message);\n        }\n      } catch (error) {\n        console.error('Erreur:', error);\n      }\n    }\n  }\n};\n</script>\n\n\n<style scoped>\n/* Use the same style as the user `ParticiperPage` */\n.participer-page {\n  width: 95%;\n  max-width: 800px;\n  margin: 20px auto;\n  padding: 20px;\n  background-color: #F3EDE0;\n  border-radius: 10px;\n  text-align: center;\n  min-height: 620px;\n}\n\n.logotype-image {\n  width: 360px; \n  margin-bottom: 20px;\n}\n\n.instruction-text {\n  font-size: 1.2rem;\n  margin-bottom: 20px;\n}\n\n.signup-button {\n  background-color: #A3BFAB;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  font-family: Lato;\n  margin: 10px 0;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 1rem;\n  width: 100%;\n  max-width: 500px;\n}\n\n.google-button {\n  margin-top: 20px;\n}\n\n.divider {\n  margin: 20px 0;\n  border-top: 5px solid #A3BFAB;\n  position: relative;\n  text-align: center;\n}\n\n.divider span {\n  position: absolute;\n  top: -12px;\n  left: 50%;\n  transform: translateX(-50%);\n  background: #F3EDE0;\n  padding: 0 10px;\n  font-size: 1rem;\n  color: black;\n}\n\n.signup-form {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.signup-form input {\n  width: 100%;\n  max-width: 500px;\n  padding: 10px;\n  margin: 10px 0;\n  border: 1px solid #243B3B;\n  border-radius: 5px;\n}\n\n.terms-text {\n  font-size: 0.9rem;\n  color: black;\n  margin: 10px 0;\n}\n\n.submit-button {\n  background-color: #678D72;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  margin-top: 20px;\n  border-radius: 5px;\n  cursor: pointer;\n  width: 100%;\n  max-width: 500px;\n  font-size: 1rem;\n}\n</style>\n"],"mappings":";OAESA,UAA2B;;;EAD7BC,KAAK,EAAC;AAAiB;gCAD9BC,kBAAA,iBAAAF,UAAA;gEAiBMG,mBAAA,CAAoF;EAAjFF,KAAK,EAAC;AAAY,GAAC,4DAA0D;gEAEhFE,mBAAA,CAA+D;EAAvDC,IAAI,EAAC,QAAQ;EAACH,KAAK,EAAC;GAAgB,YAAU;;uBAlB1DI,mBAAA,CAoBM,OApBNC,UAoBM,GAnBJC,UAAwE,EAUxEJ,mBAAA,CAQO;IARDF,KAAK,EAAC,aAAa;IAAEO,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAZrCC,cAAA,KAAAC,IAAA,KAY+CC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;sBACpDR,mBAAA,CAA6E;IAbnF,uBAAAM,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAasBC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;IAAEV,IAAI,EAAC,MAAM;IAACa,WAAW,EAAC,eAAe;IAACC,QAAQ,EAAR;iDAAlDH,KAAA,CAAAC,QAAQ,E,mBACxBb,mBAAA,CAAmE;IAdzE,uBAAAM,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAcsBC,KAAA,CAAAI,KAAK,GAAAL,MAAA;IAAEV,IAAI,EAAC,OAAO;IAACa,WAAW,EAAC,OAAO;IAACC,QAAQ,EAAR;iDAAxCH,KAAA,CAAAI,KAAK,E,mBACrBhB,mBAAA,CAAgF;IAftF,uBAAAM,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAesBC,KAAA,CAAAK,QAAQ,GAAAN,MAAA;IAAEV,IAAI,EAAC,UAAU;IAACa,WAAW,EAAC,cAAc;IAACC,QAAQ,EAAR;iDAArDH,KAAA,CAAAK,QAAQ,E,GAExBC,UAAoF,EAEpFC,UAA+D,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}