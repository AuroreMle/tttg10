{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'AppHeader',\n  data() {\n    return {\n      isLoggedIn: false,\n      dashboardLink: '',\n      menuOpen: false\n    };\n  },\n  methods: {\n    checkAuth() {\n      const userRole = localStorage.getItem('userRole');\n      this.isLoggedIn = !!userRole;\n      if (userRole === 'admin') {\n        this.dashboardLink = '/admin/dashboard';\n      } else if (userRole === 'user') {\n        this.dashboardLink = '/user/dashboard';\n      }\n    },\n    handleLogout() {\n      this.logout();\n      this.closeMenu(); // Close the menu on mobile after logout\n    },\n    logout() {\n      localStorage.removeItem('userRole');\n      localStorage.removeItem('userId');\n      this.isLoggedIn = false;\n      this.dashboardLink = '';\n      this.$router.push('/');\n    },\n    toggleMenu() {\n      this.menuOpen = !this.menuOpen;\n    },\n    closeMenu() {\n      this.menuOpen = false;\n    }\n  },\n  created() {\n    this.checkAuth();\n  },\n  watch: {\n    $route() {\n      this.checkAuth();\n    }\n  }\n};","map":{"version":3,"names":["name","data","isLoggedIn","dashboardLink","menuOpen","methods","checkAuth","userRole","localStorage","getItem","handleLogout","logout","closeMenu","removeItem","$router","push","toggleMenu","created","watch","$route"],"sources":["/Users/auroremalie/ttp/ttpjc/src/components/AppHeader.vue"],"sourcesContent":["<template>\n  <header>\n    <div class=\"header-content\">\n      <router-link to=\"/\">\n        <img src=\"@/assets/logotype.png\" alt=\"Logo TheTipTop\" class=\"logo\" />\n      </router-link>\n      <!-- Menu hamburger pour les petits écrans -->\n      <div class=\"hamburger-menu\" @click=\"toggleMenu\">\n        <span></span>\n        <span></span>\n        <span></span>\n      </div>\n      <!-- Menu normal pour les grands écrans -->\n      <nav class=\"desktop-menu\">\n        <router-link to=\"/jeu-concours\">Jeu concours</router-link>\n        <router-link to=\"/a-propos\">À propos</router-link>\n        <router-link to=\"/contact\">Contact</router-link>\n        <router-link v-if=\"isLoggedIn\" :to=\"dashboardLink\">\n          <button class=\"login-btn\">Ma dashboard</button>\n        </router-link>\n        <router-link v-else to=\"/connexion\">\n          <button class=\"login-btn\">Se connecter</button>\n        </router-link>\n        <router-link v-if=\"!isLoggedIn\" to=\"/participer\">\n          <button class=\"participate-btn\">Participer</button>\n        </router-link>\n        <button v-if=\"isLoggedIn\" @click=\"handleLogout\" class=\"participate-btn\">Se déconnecter</button>\n      </nav>\n      <!-- Menu qui apparaît sur clic pour les petits écrans -->\n      <nav v-if=\"menuOpen\" class=\"mobile-menu\">\n        <router-link to=\"/jeu-concours\" @click=\"closeMenu\">Jeu concours</router-link>\n        <router-link to=\"/a-propos\" @click=\"closeMenu\">À propos</router-link>\n        <router-link to=\"/contact\" @click=\"closeMenu\">Contact</router-link>\n        <router-link v-if=\"isLoggedIn\" :to=\"dashboardLink\" @click=\"closeMenu\">\n          <button class=\"login-btn\">Ma dashboard</button>\n        </router-link>\n        <router-link v-else to=\"/connexion\" @click=\"closeMenu\">\n          <button class=\"login-btn\">Se connecter</button>\n        </router-link>\n        <router-link v-if=\"!isLoggedIn\" to=\"/participer\" @click=\"closeMenu\">\n          <button class=\"participate-btn\">Participer</button>\n        </router-link>\n        <button v-if=\"isLoggedIn\" @click=\"handleLogout\" class=\"participate-btn\">Se déconnecter</button>\n      </nav>\n    </div>\n  </header>\n</template>\n\n<script>\nexport default {\n  name: 'AppHeader',\n  data() {\n    return {\n      isLoggedIn: false,\n      dashboardLink: '',\n      menuOpen: false,\n    };\n  },\n  methods: {\n    checkAuth() {\n      const userRole = localStorage.getItem('userRole');\n      this.isLoggedIn = !!userRole;\n\n      if (userRole === 'admin') {\n        this.dashboardLink = '/admin/dashboard';\n      } else if (userRole === 'user') {\n        this.dashboardLink = '/user/dashboard';\n      }\n    },\n    handleLogout() {\n      this.logout();\n      this.closeMenu(); // Close the menu on mobile after logout\n    },\n    logout() {\n      localStorage.removeItem('userRole');\n      localStorage.removeItem('userId');\n      this.isLoggedIn = false;\n      this.dashboardLink = '';\n      this.$router.push('/');\n    },\n    toggleMenu() {\n      this.menuOpen = !this.menuOpen;\n    },\n    closeMenu() {\n      this.menuOpen = false;\n    },\n  },\n  created() {\n    this.checkAuth();\n  },\n  watch: {\n    $route() {\n      this.checkAuth();\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Header Styles */\nheader {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0px;\n  border-bottom: 2px solid black;\n  background-color: #fff;\n  width: 100%;\n}\n\n.header-content {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n}\n\n.logo {\n  width: 200px;\n}\n\n/* Menu normal pour les grands écrans */\n.desktop-menu {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.desktop-menu a {\n  margin: 0 15px;\n  text-decoration: none;\n  color: black;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n}\n\n/* Ajout du style des boutons */\n.desktop-menu .login-btn, .desktop-menu .participate-btn {\n  border: 1px solid;\n  padding: 10px 20px;\n  margin: 0 5px;\n  color: white;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.desktop-menu .login-btn {\n  background-color: #F3EDE0;\n  color: black;\n}\n\n.desktop-menu .participate-btn {\n  background-color: #678D72;\n}\n\n/* Hamburger menu styles */\n.hamburger-menu {\n  display: none;\n  flex-direction: column;\n  cursor: pointer;\n}\n\n.hamburger-menu span {\n  height: 3px;\n  width: 25px;\n  background-color: black;\n  margin: 4px 0;\n  transition: 0.4s;\n}\n\n/* Mobile Menu (Hidden by default) */\n.mobile-menu {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: white;\n  border: 1px solid black;\n  width: 100%;\n}\n\n.mobile-menu a, .mobile-menu button {\n  margin: 10px 0;\n  text-decoration: none;\n  color: black;\n}\n\n.mobile-menu .login-btn, .mobile-menu .participate-btn {\n  border: 1px solid;\n  padding: 10px 20px;\n  margin: 0 5px;\n  color: white;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.mobile-menu .login-btn {\n  background-color: #F3EDE0;\n  color: black;\n}\n\n.mobile-menu .participate-btn {\n  background-color: #678D72;\n}\n\n/* Media Queries */\n@media (max-width: 768px) {\n  .desktop-menu {\n    display: none;\n  }\n\n  .hamburger-menu {\n    display: flex;\n  }\n}\n</style>\n"],"mappings":";AAiDA,eAAe;EACbA,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,KAAK;MACjBC,aAAa,EAAE,EAAE;MACjBC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAAA,EAAG;MACV,MAAMC,QAAO,GAAIC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;MACjD,IAAI,CAACP,UAAS,GAAI,CAAC,CAACK,QAAQ;MAE5B,IAAIA,QAAO,KAAM,OAAO,EAAE;QACxB,IAAI,CAACJ,aAAY,GAAI,kBAAkB;MACzC,OAAO,IAAII,QAAO,KAAM,MAAM,EAAE;QAC9B,IAAI,CAACJ,aAAY,GAAI,iBAAiB;MACxC;IACF,CAAC;IACDO,YAAYA,CAAA,EAAG;MACb,IAAI,CAACC,MAAM,CAAC,CAAC;MACb,IAAI,CAACC,SAAS,CAAC,CAAC,EAAE;IACpB,CAAC;IACDD,MAAMA,CAAA,EAAG;MACPH,YAAY,CAACK,UAAU,CAAC,UAAU,CAAC;MACnCL,YAAY,CAACK,UAAU,CAAC,QAAQ,CAAC;MACjC,IAAI,CAACX,UAAS,GAAI,KAAK;MACvB,IAAI,CAACC,aAAY,GAAI,EAAE;MACvB,IAAI,CAACW,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;IACxB,CAAC;IACDC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACZ,QAAO,GAAI,CAAC,IAAI,CAACA,QAAQ;IAChC,CAAC;IACDQ,SAASA,CAAA,EAAG;MACV,IAAI,CAACR,QAAO,GAAI,KAAK;IACvB;EACF,CAAC;EACDa,OAAOA,CAAA,EAAG;IACR,IAAI,CAACX,SAAS,CAAC,CAAC;EAClB,CAAC;EACDY,KAAK,EAAE;IACLC,MAAMA,CAAA,EAAG;MACP,IAAI,CAACb,SAAS,CAAC,CAAC;IAClB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}