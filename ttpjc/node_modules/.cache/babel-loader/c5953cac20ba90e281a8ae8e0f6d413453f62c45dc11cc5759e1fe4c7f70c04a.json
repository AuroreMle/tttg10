{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: \"UserDashboard\",\n  data() {\n    return {\n      code: '',\n      history: [],\n      alertMessage: '',\n      alertClass: '',\n      userId: null\n    };\n  },\n  methods: {\n    async validateCode() {\n      try {\n        const response = await axios.post('http://localhost:3000/validate-code', {\n          userId: this.userId,\n          code: this.code\n        });\n        if (response.status === 200 && response.data.message === 'Code valide !') {\n          this.alertMessage = 'Code valide !';\n          this.alertClass = 'alert-success';\n          const newEntry = {\n            date: new Date().toLocaleDateString(),\n            code: this.code,\n            gain: response.data.gain,\n            expiryDate: new Date(new Date().setDate(new Date().getDate() + 30)).toLocaleDateString()\n          };\n          this.history.push(newEntry);\n        } else {\n          this.alertMessage = 'Code invalide.';\n          this.alertClass = 'alert-error';\n        }\n      } catch (error) {\n        if (error.response && error.response.status === 404) {\n          this.alertMessage = 'Code invalide.';\n        } else {\n          console.error('Erreur lors de la validation du code: ', error);\n          this.alertMessage = 'Erreur lors de la validation du code.';\n        }\n        this.alertClass = 'alert-error';\n      }\n    },\n    async fetchHistory() {\n      try {\n        const response = await axios.get(`http://localhost:3000/user-history/${this.userId}`);\n        this.history = response.data.map(entry => ({\n          date: new Date(entry.validation_date).toLocaleDateString(),\n          code: entry.code,\n          gain: entry.gain,\n          expiryDate: new Date(entry.expiry_date).toLocaleDateString()\n        }));\n      } catch (error) {\n        console.error('Erreur lors de la récupération de l\\'historique : ', error);\n      }\n    }\n  },\n  mounted() {\n    this.userId = this.$route.params.userId || localStorage.getItem('userId');\n    if (this.userId) {\n      this.fetchHistory();\n    } else {\n      console.error('Erreur : userId non défini');\n      this.alertMessage = 'Erreur : ID utilisateur non fourni. Veuillez vous reconnecter.';\n      this.alertClass = 'alert-error';\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","code","history","alertMessage","alertClass","userId","methods","validateCode","response","post","status","message","newEntry","date","Date","toLocaleDateString","gain","expiryDate","setDate","getDate","push","error","console","fetchHistory","get","map","entry","validation_date","expiry_date","mounted","$route","params","localStorage","getItem"],"sources":["/Users/auroremalie/ttpjc/src/views/UserDashboard.vue"],"sourcesContent":["<template>\n  <div class=\"user-dashboard\">\n    <!-- Section 1 -->\n    <section class=\"section-greeting\">\n      <h1>Bonjour, comment gagnez-vous aujourd’hui ?</h1>\n      <form class=\"code-form\" @submit.prevent=\"validateCode\">\n        <input type=\"text\" v-model=\"code\" placeholder=\"Entrer le code concours\" />\n        <button type=\"submit\">Valider</button>\n      </form>\n      <p v-if=\"alertMessage\" :class=\"alertClass\">{{ alertMessage }}</p>\n    </section>\n\n    <!-- Section 2 -->\n    <section class=\"section-history\">\n      <h2>Historique des gains</h2>\n      <div class=\"history-table-wrapper\">\n        <table class=\"history-table\">\n          <thead>\n            <tr>\n              <th>Date de validation</th>\n              <th>Code concours</th>\n              <th>Gain</th>\n              <th>A retirer le plus tard</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(entry, index) in history\" :key=\"index\">\n              <td>{{ entry.date }}</td>\n              <td>{{ entry.code }}</td>\n              <td>{{ entry.gain }}</td>\n              <td>{{ entry.expiryDate }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: \"UserDashboard\",\n  data() {\n    return {\n      code: '',\n      history: [],\n      alertMessage: '',\n      alertClass: '',\n      userId: null\n    };\n  },\n  methods: {\n    async validateCode() {\n      try {\n        const response = await axios.post('http://localhost:3000/validate-code', { userId: this.userId, code: this.code });\n        if (response.status === 200 && response.data.message === 'Code valide !') {\n          this.alertMessage = 'Code valide !';\n          this.alertClass = 'alert-success';\n\n          const newEntry = {\n            date: new Date().toLocaleDateString(),\n            code: this.code,\n            gain: response.data.gain,\n            expiryDate: new Date(new Date().setDate(new Date().getDate() + 30)).toLocaleDateString()\n          };\n          this.history.push(newEntry);\n        } else {\n          this.alertMessage = 'Code invalide.';\n          this.alertClass = 'alert-error';\n        }\n      } catch (error) {\n        if (error.response && error.response.status === 404) {\n          this.alertMessage = 'Code invalide.';\n        } else {\n          console.error('Erreur lors de la validation du code: ', error);\n          this.alertMessage = 'Erreur lors de la validation du code.';\n        }\n        this.alertClass = 'alert-error';\n      }\n    },\n    async fetchHistory() {\n      try {\n        const response = await axios.get(`http://localhost:3000/user-history/${this.userId}`);\n        this.history = response.data.map(entry => ({\n          date: new Date(entry.validation_date).toLocaleDateString(),\n          code: entry.code,\n          gain: entry.gain,\n          expiryDate: new Date(entry.expiry_date).toLocaleDateString()\n        }));\n      } catch (error) {\n        console.error('Erreur lors de la récupération de l\\'historique : ', error);\n      }\n    }\n  },\n  mounted() {\n    this.userId = this.$route.params.userId || localStorage.getItem('userId');\n\n    if (this.userId) {\n      this.fetchHistory();\n    } else {\n      console.error('Erreur : userId non défini');\n      this.alertMessage = 'Erreur : ID utilisateur non fourni. Veuillez vous reconnecter.';\n      this.alertClass = 'alert-error';\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Styles pour les alertes */\n.alert-success {\n  color: green;\n}\n\n.alert-error {\n  color: red;\n}\n\n.user-dashboard {\n  padding: 20px;\n}\n\n.section-greeting {\n  margin-bottom: 20px;\n}\n\n.section-greeting h1 {\n  font-weight: bold;\n  margin-bottom: 20px;\n  text-align: center; /* Centrer le texte */\n}\n\n.code-form {\n  display: flex;\n  flex-direction: column; /* Changer la direction en colonne pour les petits écrans */\n  gap: 10px; /* Espacement entre les éléments */\n  align-items: center; /* Centrer les éléments */\n}\n\n.code-form input {\n  width: 100%; /* Largeur à 100% pour les petits écrans */\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n}\n\n.code-form button {\n  padding: 10px 20px; /* Ajuster la taille du bouton */\n  background-color: #678d72;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.section-history {\n  margin-top: 20px;\n}\n\n.section-history h2 {\n  font-weight: bold;\n  margin-bottom: 20px;\n  text-align: center; /* Centrer le texte */\n}\n\n.history-table-wrapper {\n  overflow-x: auto; /* Ajouter le défilement horizontal */\n}\n\n.history-table {\n  width: 100%;\n  border-collapse: collapse; /* Fusionner les bordures */\n  background-color: #f3ede0;\n  border: 2px solid #000;\n  border-radius: 15px;\n  overflow: hidden; /* Assurer la visibilité des coins arrondis */\n}\n\n.history-table th, .history-table td {\n  padding: 10px;\n  text-align: left;\n}\n\n.history-table th {\n  background-color: #f3ede0;\n  color: black;\n}\n\n.history-table td {\n  background-color: #a3bfab;\n  color: white;\n}\n\n/* Styles responsive */\n@media (max-width: 768px) {\n  .section-greeting {\n    margin-bottom: 20px;\n  }\n\n  .section-greeting h1 {\n    font-size: 1.2rem; /* Réduit la taille du texte du titre */\n  }\n\n  .code-form input, .code-form button {\n    width: 100%; /* Assure que les éléments du formulaire occupent toute la largeur */\n  }\n\n  .history-table {\n    border-radius: 0; /* Supprime les coins arrondis pour le tableau sur petits écrans */\n  }\n\n  .history-table th, .history-table td {\n    font-size: 0.9rem; /* Réduit la taille du texte dans le tableau */\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}